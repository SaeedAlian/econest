CREATE TABLE roles (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE,
  description VARCHAR(1023),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  username VARCHAR(150) NOT NULL UNIQUE,
  email VARCHAR(255) NOT NULL UNIQUE,
  email_verified BOOLEAN NOT NULL DEFAULT FALSE,
  password VARCHAR(255) NOT NULL,
  full_name VARCHAR(255),
  birth_date DATE,
  is_banned BOOLEAN NOT NULL DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  role_id INTEGER NOT NULL REFERENCES roles(id) ON DELETE RESTRICT
);

CREATE TABLE users_settings (
  id SERIAL PRIMARY KEY,
  public_email BOOLEAN NOT NULL DEFAULT FALSE,
  public_birth_date BOOLEAN NOT NULL DEFAULT FALSE,
  is_using_dark_theme BOOLEAN NOT NULL DEFAULT FALSE,
  language VARCHAR(4) NOT NULL DEFAULT 'en',
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  user_id INTEGER NOT NULL UNIQUE REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE phonenumbers (
  id SERIAL PRIMARY KEY,
  country_code VARCHAR(5) NOT NULL,
  number VARCHAR(15) NOT NULL UNIQUE,
  is_public BOOLEAN NOT NULL DEFAULT FALSE,
  verified BOOLEAN NOT NULL DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE addresses (
  id SERIAL PRIMARY KEY,
  state VARCHAR(127) NOT NULL,
  city VARCHAR(127) NOT NULL,
  street VARCHAR(255) NOT NULL,
  zipcode VARCHAR(127) NOT NULL,
  details VARCHAR(1023),
  is_public BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE wallets (
  id SERIAL PRIMARY KEY,
  balance FLOAT8 NOT NULL DEFAULT 0 CHECK (balance >= 0),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  user_id INTEGER NOT NULL UNIQUE REFERENCES users(id) ON DELETE CASCADE
);
